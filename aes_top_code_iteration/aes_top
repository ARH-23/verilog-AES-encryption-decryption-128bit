`timescale 1ns / 1ps
module AES_TOP(	
    input              clk_top,
    input              rst_top,
    input  [127:0]     plain_128_top,   //输入要加密或解密的128位数据
    input              plain_rdy_top,
    input  [127:0]     key_128_in_top,     //输入128位密钥
    input              key_rdy,
    input              deoren_top,      //输出的128位加密或解密后的数据
    output             cipher_done_top,  //输出数据使能,);
    output  [127:0]    cipher_128_top  //输出的128位加密或解密后的数据
    );
    wire [127:0]text_en_out;
    wire [127:0]text_de_out;
    wire [127:0]final;  
    wire de_done_top;
    wire en_done_top;
    //加密顶层
     encryption_top u1(
     .sys_rst_n(rst_top),
     .sys_clk(clk_top),
     .plaintext(plain_128_top),
     .key_128(key_128_in_top),
     .en_msg(text_en_out),
     .text_en(plain_rdy_top),
     .enc_done(en_done_top)
     );
  //解密顶层 
  decryption_top u2(
     .sys_clk_de(clk_top),
     .sys_rst_n_de(rst_top),
     .text_en(plain_rdy_top),
     .key_128(key_128_in_top),
     .plaintext(plain_128_top),
     .de_msg(text_de_out)
     );
    assign final=(en_done_top)?text_de_out:final;
    assign  cipher_done_top=(en_done_top)? 1'b1:1'b0;       
    assign cipher_128_top=(deoren_top)?text_en_out:final;
endmodule
